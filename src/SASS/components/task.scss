.task {
  padding: 11px 0px;
  border-bottom: 1px solid #f0f0f0;
  position: relative;
  margin-bottom: 10px;
  cursor: pointer;

  header {
    display: flex;
    gap: 8px;
  }

  h4 {
    display: -webkit-box;
    overflow-wrap: break-word;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
    margin-bottom: 5px;
    padding-bottom: 0.14em;
  }

  &:hover {
    .task-buttons {
      opacity: 1;
    }
  }

  &[data-visible="false"] {
    display: none;
  }

  &[data-status="completed"] {
    h4 {
      text-decoration: line-through;
    }

    .task-checkbox {
      background-color: currentColor;

      svg {
        fill: white;
        opacity: 1;
      }
    }
  }
}

.task-checkbox {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1px;
  width: 18px;
  height: 18px;
  border: 1px solid currentColor;
  border-radius: 50%;
  cursor: pointer;

  svg {
    width: 16px;
    height: 16px;
    fill: currentColor;
    opacity: 0;
    transition: opacity 200ms ease-in-out;
  }

  &:hover {
    svg {
      opacity: 1;
    }
  }

  @keyframes uncheckingTask {
    0% {
      background: currentColor;
      box-shadow: 0px 0px 0px 0px transparent;
    }

    100% {
      background: white;
      box-shadow: 0px 0px 3px 2px currentColor;
    }
  }

  @keyframes checkingTask {
    from {
      background: transparent;
      box-shadow: 0px 0px 0px 0px transparent;
    }
    to {
      background: currentColor;
      box-shadow: 0px 0px 3px 2px currentColor;
    }
  }

  &[data-animation="checking"] {
    animation: checkingTask 500ms ease-in-out forwards;

    svg {
      color: white;
      opacity: 1;
    }
  }

  &[data-animation="unchecking"] {
    animation: uncheckingTask 500ms ease-in-out forwards;
  }
}

.task-description {
  font-size: 0.875rem;
  padding-left: 26px;
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
  padding-bottom: 0.14em;
}

.task-duedate {
  font-size: 0.8125rem;
  padding-left: 24px;
  display: flex;
  align-items: center;
  gap: 4px;

  svg {
    width: 20px;
    height: 20px;
  }
}

[data-pending-status="pending"] {
  color: #707070;
}

[data-pending-status="today"] {
  color: #058527;
}

[data-pending-status="overdue"] {
  color: #d1453b;
}

.task-duedate-text {
  margin-top: 3px;
}

.task-buttons {
  display: inline-flex;
  gap: 8px;
  padding-left: 8px;

  position: absolute;
  top: 8px;
  right: 0px;
  opacity: 0;
  transition: opacity 200ms ease-in-out;

  background: white;
  box-shadow: -12px 0px 16px 0px white;
}

.task-button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 24px;
  height: 24px;
  background-color: transparent;
  border-radius: 5px;
  transition: background-color 200ms ease-in-out;
  cursor: pointer;
  padding: 4px;
  color: #808080;

  &:hover {
    background-color: #eeeeee;
    color: #202020;
  }

  svg {
    width: 16px;
    height: 16px;
  }
}

.task-modal-header {
  padding: 8px 16px;
  border-bottom: 1px solid #f5f5f5;
}

@keyframes taskModalAppearing {
  from {
    opacity: 0;
    transform: scale(0.9);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

.task-modal {
  display: flex;
  flex-direction: column;
  position: fixed;
  bottom: 0px;
  z-index: 5;
  overflow: hidden;

  width: 100vw;
  max-width: 860px;
  height: calc(100vh - 32px);

  background: white;
  border-top-right-radius: 16px;
  border-top-left-radius: 16px;

  &[data-visible="false"] {
    opacity: 0;
  }

  &[data-animation="opening"] {
    animation: taskModalAppearing 200ms ease-in-out;
  }

  &[data-animation="closing"] {
    animation: taskModalAppearing 200ms ease-in-out reverse;
  }

  @media screen and (min-width: 768px) {
    bottom: unset;
    height: calc(100vh - 64px);
    border-radius: 16px;
  }
}

.task-modal-container {
  overflow: auto;
}

.task-modal-header {
  display: flex;
  justify-content: space-between;
}

.task-modal-header-buttons {
  display: flex;
  gap: 8px;
}

.task-modal-header-parents {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 6px;
}

.task-modal-header-parent-separator {
  margin: 0px 8px;
  color: #707070;
}

.task-modal-parent {
  display: flex;
  align-items: center;
  gap: 5px;
  text-decoration: none;

  svg {
    width: 20px;
    height: 20px;
  }

  span {
    font-size: 0.8125rem;
    color: rgb(42 41 41 / 88%);
  }
}

.task-header-button {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 30px;
  height: 30px;
  transition: background-color 200ms ease-in-out;
  border-radius: 5px;
  cursor: pointer;

  &:hover {
    background-color: #eeeeee;

    svg {
      transition: color 200ms ease-in-out;
      color: #414141;
    }
  }

  svg {
    width: 16px;
    height: 16px;
    color: #828282;
  }
}

.task-in-modal-wrapper {
  display: flex;
  padding: 26px 35px;
  margin-bottom: 10px;
}

.task-in-modal {
  width: 100%;

  .task-checkbox {
    margin-top: 3px;
  }

  &[data-status="completed"] {
    .task-in-modal-taskbox-title p {
      text-decoration: line-through;
    }

    .task-checkbox {
      background-color: currentColor;

      svg {
        fill: white;
        opacity: 1;
      }
    }
  }
}

.task-in-modal-container {
  display: flex;
  gap: 10px;
}

.task-in-modal-taskbox {
  width: 100%;
  padding: 3px 6px;
  border: 1px solid transparent;
  transition: border-color 200ms ease-in-out;
  border-radius: 5px;

  &[data-editable="true"] {
    min-height: 118px;
    border-color: #eeeeee;

    &:hover,
    &:focus-visible {
      border-color: #999999;
    }

    .task-in-modal-taskbox-title p {
      text-decoration: none;
    }
  }
}

.task-in-modal-taskbox-title {
  font-size: 1.25rem;
  margin-bottom: 21px;

  p {
    font-weight: 600;
  }
}

.task-in-modal-parameters {
  padding: 0px 30px 30px 30px;
}

.task-in-modal-parameter {
  display: flex;
  align-items: center;
  width: 100%;
  padding: 10px 12px;
  gap: 18px;
  border-radius: 8px;
  cursor: pointer;
  position: relative;
  transition: background-color 200ms ease-in-out;

  .section-select-arrow {
    margin-left: auto;
    svg {
      opacity: 0;
      width: 12px;
      height: 12px;
      transform: rotate(90deg);
    }
  }

  &:hover,
  &[data-active="true"] {
    background-color: #eeeeee;

    .section-select-arrow {
      svg {
        opacity: 1;
      }
    }
  }

  &::after {
    content: "";
    display: block;
    background-color: #eeeeee;
    width: 90%;
    height: 1px;
    position: absolute;
    left: 49px;
    bottom: 0px;
  }
}

.task-in-modal-parameter-text {
  font-size: 1rem;
  color: #000000e0;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.task-in-modal-parameter-icon {
  display: inline-flex;

  svg {
    width: 20px;
    height: 20px;
  }
}

@keyframes taskboxModalAppearing {
  from {
    opacity: 0;
    transform: scale(0.75);
  }

  to {
    opacity: 1;
    transform: scale(1);
  }
}

.task-box {
  background-color: white;
  border-radius: 8px;
  border: 1px solid #eeeeee;
  padding: 11px 11px 8px 11px;

  &:has(.ProseMirror-focused) {
    border: 1px solid #999999;
  }

  &[data-visible="false"] {
    display: none;
  }

  &.task-box-modal {
    top: 70px;
    width: clamp(0px, 80vw, 550px);
    padding: 16px;
    border: unset;
    box-shadow: 0px 7px 30px 1px #00000052;
    transform-origin: bottom;

    .taskbox-title-input p {
      font-size: 1.125rem;
    }

    .task-box-buttons {
      margin-top: 16px;
    }

    &[data-visible="false"] {
      display: block;
      opacity: 0;
      pointer-events: none;
    }

    &[data-animation="opening"] {
      animation: taskboxModalAppearing 200ms ease-in-out;
    }

    &[data-animation="closing"] {
      animation: taskboxModalAppearing 200ms ease-in-out reverse;
    }
  }
}

.task-box-text-inputs {
  display: flex;
  flex-direction: column;
  gap: 6px;
  max-height: 200px;
  overflow: auto;

  margin-bottom: 10px;

  p {
    color: rgba(0, 0, 0, 0.88);
    line-height: 1.4;
  }
}

.taskbox-title-input p {
  font-weight: 500;
}

.task-box-text-inputs-error {
  font-size: 0.8125rem;
  color: #d1453b;
  margin-bottom: 10px;
}

.task-box-task-parameters {
  display: flex;
  gap: 8px;
  margin-bottom: 12px;
}

.task-box-separator {
  background: #eeeeee;
  width: calc(100% + 22px);
  height: 1px;
  transform: translateX(-12px);
}

.task-box-buttons {
  display: flex;
  justify-content: flex-end;
  gap: 8px;
  margin-top: 8px;
}

.task-box-button {
  display: flex;
  padding: 4px 8px 4px 8px;
  border: 1px solid #dddddd;
  border-radius: 5px;
  gap: 8px;
  cursor: pointer;

  svg {
    width: 16px;
    height: 16px;
  }

  &:hover,
  &:active {
    background-color: #eeeeee;
  }
}

.task-box-button-text {
  font-size: 0.875rem;
  color: currentColor;
}

[data-priority="1"] {
  color: #d1453b;
}

[data-priority="2"] {
  color: #eb8909;
}

[data-priority="3"] {
  color: #246fe0;
}

[data-priority="4"] {
  color: #666666;
}

.select-duedate {
  position: relative;
}

.calendar-wrapper {
  background: white;
}

.react-calendar {
  width: 254px !important;
  padding: 12px !important;
  border: 1px solid #eeeeee;
  border-radius: 5px;
  box-shadow: 0px 0px 4px 0px rgb(52 51 51 / 48%);
}

.react-calendar__navigation {
  display: flex !important;
  height: unset !important;
  margin-bottom: 5px !important;
}

.react-calendar__navigation__arrow {
  display: flex;
  justify-content: center;
  align-items: center;
  min-width: unset !important;
  width: 20px !important;
  height: 20px !important;
  padding-bottom: 4px;
  padding-left: 4px;
  border-radius: 4px;
  cursor: pointer;

  &:hover {
    background: #dddddd;
  }
}

.react-calendar__navigation__label {
  order: -1;
  flex-grow: unset !important;
  margin-right: auto !important;
}

.react-calendar__navigation__label__labelText {
  font-size: 14px;
  font-weight: 600;
}

.react-calendar__navigation__prev2-button,
.react-calendar__navigation__next2-button {
  display: none;
}

.react-calendar__month-view__weekdays {
  margin-bottom: 3px;
}

.react-calendar__month-view__weekdays__weekday {
  display: flex;
  justify-content: center;
  align-items: center;
  color: #808080 !important;
  font-size: 12px;
}

abbr[title] {
  text-decoration: none;
}

.react-calendar__month-view__days {
  display: grid !important;
  grid-template-columns: repeat(7, 1fr) !important;
  justify-items: center;
}

.react-calendar__tile--active {
  background: #dd4b39 !important;
  color: white !important;
}

.react-calendar__tile--now:not(.react-calendar__tile--active):not(
    [data-selected="true"]
  ) {
  background-color: transparent !important;
  color: #dd4b39 !important;
  font-weight: 700;
}

.react-calendar__year-view__months__month {
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 7px;
  font-weight: 600;
  cursor: pointer;

  &:hover {
    background: #dd4b39;
    color: white;
  }
}

.react-calendar__month-view__days .react-calendar__tile {
  display: flex;
  flex: unset !important;
  justify-content: center;
  align-items: center;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  font-size: 12px;
  font-weight: 600;
  cursor: pointer;

  &:hover:not(.react-calendar__tile--active) {
    background-color: #f1f1f1 !important;
  }
}

.react-calendar__month-view__days__day--weekend:not(
    .react-calendar__tile--active
  ) {
  color: unset !important;
}

.react-calendar__month-view__days__day {
  abbr {
    pointer-events: none;
  }
}

.react-calendar__tile[data-selected="true"] {
  background-color: var(--mainColor) !important;
  color: white;
}

.react-calendar__year-view .react-calendar__tile,
.react-calendar__decade-view .react-calendar__tile,
.react-calendar__century-view .react-calendar__tile {
  padding: 0.55em 0em !important;

  abbr {
    font-size: 14px;
  }
}

.priority-select {
  background: white;
  border-radius: 5px;
  border: 1px solid #e5e5e5;
  box-shadow: 0px 0px 4px 0px rgb(52 51 51 / 48%);

  li {
    list-style: none;
  }
}

.priority-select-dropdown-option {
  display: flex;
  gap: 15px;
  padding: 7px 32px 7px 12px;
  cursor: pointer;

  &:hover {
    background-color: #f3f3f3;
  }

  &[aria-selected="true"] {
    .priority-checkmark {
      opacity: 1;
    }
  }

  svg {
    width: 16px;
    height: 16px;
  }
}

.priority-select-dropdown-option-text {
  color: #202020;
}

.priority-checkmark {
  position: absolute;
  right: 9px;
  transform: translate(0px, 1px);
  color: var(--mainColor);
  opacity: 0;
}

.section-select-wrapper {
  display: flex;
  flex: 1;
  min-width: 0px;
}

.section-select-button {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 1px 14px 1px 6px;
  border-radius: 5px;
  color: #666;
  max-width: 100%;

  transition: background-color 200ms ease-in-out;

  &:hover {
    color: #1a1a1a;
    background-color: #eeeeee;
    cursor: pointer;
  }
}

.section-select-button-title-wrapper {
  display: grid;
  grid-auto-flow: column;
  max-width: 100%;
}

.section-select-button-title {
  display: inline-flex;
  gap: 2px;
  align-items: center;
  min-width: 0px;
  overflow: hidden;
}

.section-select-button-title-separator {
  display: inline-flex;
  margin: 0px 6px;
}

.section-select-button-title-text {
  color: currentColor;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.section-select-button-title-icon {
  display: flex;
  justify-content: center;
  min-width: 20px;
  width: 20px;

  svg {
    display: block;
    width: 18px;
    height: 18px;
    margin-right: 3px;
    color: currentColor;
  }
}

.section-select-arrow {
  display: inline-flex;
}

.section-select-arrow svg {
  display: inline-block;
  width: 6px;
  height: 6px;
  transform: rotate(270deg);
}

.section-select-dropdown-option {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 5px 12px 6px 12px;
  cursor: pointer;
  transition: background-color 200ms ease-in-out;

  &[data-type="section"] {
    padding-left: 15px;
  }

  &:hover {
    background-color: #f3f3f3;
  }
}

.section-select-dropdown-option-icon {
  display: flex;
  justify-content: center;
  width: 20px;

  &[data-type="inbox"] > svg,
  &[data-type="section"] > svg {
    display: block;
    width: 20px;
    height: 20px;
  }
}

.section-select-dropdown-option-text {
  color: #000000e0;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  padding-bottom: 0.04em;
}

.section-select {
  width: 300px;
  max-height: 250px;
  background: white;
  border: 1px solid #e5e5e5;
  border-radius: 5px;
  box-shadow: 0px 0px 6px 0px rgba(143, 143, 143, 0.4901960784);
}
